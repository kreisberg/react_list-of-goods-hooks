{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","ALPHABET","sort","name1","name2","localeCompare","LENGTH","product1","product2","length","reverse","App","useState","setIsReversed","NONE","setSortType","className","type","onClick","current","map","product","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,0DAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcF,SAASC,EACPC,EADF,GAGG,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAENC,EAAY,YAAOH,GAEzB,OAAQC,GACN,KAAKJ,EAASO,SACZD,EAAaE,MAAK,SAACC,EAAOC,GAAR,OAChBD,EAAME,cAAcD,MAEtB,MAEF,KAAKV,EAASY,OACZN,EAAaE,MAAK,SAACK,EAAUC,GAAX,OAChBD,EAASE,OAASD,EAASC,UAWjC,OAJIV,GACFC,EAAaU,UAGRV,G,SArCJN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAwCE,IAAMiB,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOb,EAAP,KAAmBc,EAAnB,KACA,EAAgCD,mBAASlB,EAASoB,MAAlD,mBAAOhB,EAAP,KAAiBiB,EAAjB,KAmBA,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWlB,IAAaJ,EAASO,SAC7B,uBACA,0BACJiB,QAzBgC,WACtCH,EAAYrB,EAASO,WAmBjB,iCAUA,wBACEgB,KAAK,SACLD,UAAWlB,IAAaJ,EAASY,OAC7B,0BACA,6BACJY,QA/B0B,WAChCH,EAAYrB,EAASY,SAyBjB,4BAUA,wBACEW,KAAK,SACLD,UAAWjB,EACP,0BACA,6BACJmB,QArCqB,WAC3BL,GAAc,SAAAM,GAAO,OAAKA,MA+BtB,qBAUCrB,IAAaJ,EAASoB,MAAQf,EAE3B,wBACEkB,KAAK,SACLD,UAAU,yBACVE,QA3Ce,WACzBL,GAAc,GACdE,EAAYrB,EAASoB,OAsCb,mBAQA,MAGN,8BACE,6BAEIlB,EAAkBD,EAAiB,CAAEG,WAAUC,eAC5CqB,KAAI,SAACC,GAAD,OACH,oBACE,UAAQ,OADV,SAIGA,GAFIA,cChIvBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1d56c006.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nfunction getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods.sort((name1, name2) => (\n        name1.localeCompare(name2)\n      ));\n      break;\n\n    case SortType.LENGTH:\n      visibleGoods.sort((product1, product2) => (\n        product1.length - product2.length\n      ));\n      break;\n\n    default: break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const handleClickDoSortAlphabetically = () => {\n    setSortType(SortType.ALPHABET);\n  };\n\n  const handleClickDoSortByLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const handleClickDoReverse = () => {\n    setIsReversed(current => !current);\n  };\n\n  const handleClickDoReset = () => {\n    setIsReversed(false);\n    setSortType(SortType.NONE);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={sortType === SortType.ALPHABET\n            ? 'button is-info pulse'\n            : 'button is-info is-light'}\n          onClick={handleClickDoSortAlphabetically}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={sortType === SortType.LENGTH\n            ? 'button is-success pulse'\n            : 'button is-success is-light'}\n          onClick={handleClickDoSortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={isReversed\n            ? 'button is-warning pulse'\n            : 'button is-warning is-light'}\n          onClick={handleClickDoReverse}\n        >\n          Reverse\n        </button>\n\n        {sortType !== SortType.NONE || isReversed\n          ? (\n            <button\n              type=\"button\"\n              className=\"button pulse is-danger\"\n              onClick={handleClickDoReset}\n            >\n              Reset\n            </button>\n          )\n          : ''}\n      </div>\n\n      <div>\n        <ul>\n          {\n            getReorderedGoods(goodsFromServer, { sortType, isReversed })\n              .map((product) => (\n                <li\n                  data-cy=\"Good\"\n                  key={product}\n                >\n                  {product}\n                </li>\n              ))\n          }\n        </ul>\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}